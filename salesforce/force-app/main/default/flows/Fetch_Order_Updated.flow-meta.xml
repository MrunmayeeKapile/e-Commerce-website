<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>64.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Add_Output_Values</name>
        <label>Add Output Values</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>output</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>[</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>output</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&quot;Contact Email&quot;:&quot;{!order.Contact__r.Email}&quot;,</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>output</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&quot;Contact Name&quot;:&quot;{!order.Contact__r.Name}&quot;,</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>output</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&quot;Order Status&quot;:&quot;{!order.Status}&quot;,</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>output</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&quot;Order Start Date&quot;:&quot;{!order.EffectiveDate}&quot;,</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>output</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&quot;Order Total Amount&quot;:&quot;{!order.TotalAmount}&quot;,</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>output</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&quot;Order Delivery Date&quot;:&quot;{!order.EndDate}&quot;,</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>output</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&quot;Order Shipping Country&quot;:&quot;{!order.ShippingCountry}&quot;,</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>output</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&quot;Order Shipping State&quot;:&quot;{!order.ShippingState}&quot;,</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>output</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&quot;Order Shipping Street&quot;:&quot;{!order.ShippingStreet}&quot;,</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>output</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&quot;Order Tracking Url&quot;:&quot;{!order.Tracking_Url__c}&quot;,</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Collect_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_2</name>
        <label>Assignment 2</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>output</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&quot;Product Name&quot;:&quot;{!Collect_Product.Product2.Name}&quot;,</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>output</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&quot;List Price&quot;:&quot;{!Collect_Product.ListPrice}&quot;,</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>output</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&quot;Total Price&quot;:&quot;{!Collect_Product.TotalPrice}&quot;,</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>output</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>&quot;Quantity&quot;:&quot;{!Collect_Product.Quantity}&quot;,</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Collect_Product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>End_Output_Loop</name>
        <label>End Output Loop</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>output</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>]</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <description>USed to fetch products whenever order details and email are provided by user</description>
    <environments>Default</environments>
    <interviewLabel>Fetch Order Updated {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Fetch Order Updated</label>
    <loops>
        <name>Collect_Product</name>
        <label>Collect Product</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>Get_Products</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assignment_2</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>End_Output_Loop</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Contact</name>
        <label>Get Contact</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>order</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Email</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Products</name>
        <label>Get Products</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Add_Output_Values</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OrderId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>order.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>OrderItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>order</name>
        <label>order</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Products</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OrderNumber</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>orderNumber</elementReference>
            </value>
        </filters>
        <filters>
            <field>Contact__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Contact.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Order</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Contact</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>Email</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>This is the order number for which we want to fetch the details.</description>
        <name>orderNumber</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>output</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
